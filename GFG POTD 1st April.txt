// DFS of Graph(Easy).

class Solution {
  private:
    void dfs(int i,vector<vector<int>>& adj,vector<int> &vis,vector<int> &ans){
        ans.push_back(i);
        vis[i] = 1;
        for(auto &it:adj[i]){
            if(!vis[it])
                dfs(it,adj,vis,ans);
        }
    }
  public:
    vector<int> dfs(vector<vector<int>>& adj) {
        // Code here
        int V = adj.size();
        vector<int> vis(V);
        vector<int> ans;
        for(int i=0;i<V;i++){
            if(!vis[i])
                dfs(i,adj,vis,ans);
        }
        return ans;
    }
};