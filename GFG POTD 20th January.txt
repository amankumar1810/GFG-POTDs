// Merge two sorted linked lists (Medium).

// Similar to LC 21.
class Solution {
  public:
    Node* sortedMerge(Node* head1, Node* head2) {
        // code here
        if(head1==NULL)
            return head2;
        if(head2==NULL)
            return head1;
        
        Node *ptr = head1;
        if(head2->data < head1->data){
            ptr = head2;
            head2 = head2->next;
        }
        else
            head1 = head1->next;
            
        Node *curr = ptr;
        while(head1 && head2){
            if(head1->data < head2->data){
                curr->next = head1;
                head1 = head1->next;
            }
            else{
                curr->next = head2;
                head2 = head2->next;
            }
            curr = curr->next;
        }
        if(head1==NULL)
            curr->next = head2;
        else if(head2==NULL)
            curr->next = head1;
        return ptr;
    }
};