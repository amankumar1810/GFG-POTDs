// Undirected Graph Cycle(Medium).

// Question ko little bit change kar diya hai, phir bhi ban gaya.
class Solution {
  private:
    bool dfs(int node,vector<vector<int>> &adj,vector<int> &vis,int par){
        vis[node] = 1;
        for(int &i:adj[node]){
            if(!vis[i]){
                if(dfs(i,adj,vis,node))
                    return true;
            }
            else if(i!=par)
                return true;
        }
        return false;
    }
  public:
    bool isCycle(int V, vector<vector<int>>& edges) {
        // Code here
        int E = edges.size();
        vector<vector<int>> adj(V);
        for(int i=0;i<E;i++){
            int u = edges[i][0];
            int v = edges[i][1];
            adj[u].push_back(v);
            adj[v].push_back(u);
        }
        vector<int> vis(V,0);
        for(int i=0;i<V;i++){
            if(!vis[i]){
                if(dfs(i,adj,vis,-1))
                    return true;
            }
        }
        return false;
    }
};