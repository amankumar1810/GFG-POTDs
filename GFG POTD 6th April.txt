// Topological sort(Medium).

class Solution {
  public:
    void dfs(int node,vector<vector<int>>& adj,vector<int> &vis,stack<int> &stk){
        vis[node] = 1;
        for(int &i:adj[node]){
            if(!vis[i])
                dfs(i,adj,vis,stk);
        }
        stk.push(node);
    }
    vector<int> topoSort(int V, vector<vector<int>>& edges) {
        // code here
        int E = edges.size();
        vector<vector<int>> adj(V);
        for(int i=0;i<E;i++){
            int u = edges[i][0];
            int v = edges[i][1];
            adj[u].push_back(v);
        }
        vector<int> vis(V,0);
        stack<int> stk;
        for(int i=0;i<V;i++){
            if(!vis[i])
                dfs(i,adj,vis,stk);
        }
        vector<int> ans;
        while(!stk.empty()){
            ans.push_back(stk.top());
            stk.pop();
        }
        return ans;
    }
};